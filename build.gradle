plugins {
    id 'java'
    id 'application'
}

group = 'org.vibhusha'
version = '1.0-SNAPSHOT'

project.ext.lwjglVersion = "3.3.2" // ðŸ”¥ Upgrade LWJGL to 3.3.2

// Detect OS and set the appropriate LWJGL native libraries
def osName = System.getProperty("os.name").toLowerCase()
def isMac = osName.contains("mac")
def isArm = System.getProperty("os.arch").contains("aarch64")

if (isMac && isArm) {
    project.ext.lwjglNatives = "natives-macos-arm64" // âœ… Available in LWJGL 3.3.2
} else if (isMac) {
    project.ext.lwjglNatives = "natives-macos"
} else if (osName.contains("win")) {
    project.ext.lwjglNatives = "natives-windows"
} else {
    project.ext.lwjglNatives = "natives-linux"
}

project.ext.jomlVersion = "1.10.0"

repositories {
    mavenCentral()

    // ðŸ”¥ Add LWJGL custom repository for latest native binaries
    maven { url 'https://repo.lwjgl.org' }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.28'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // LWJGL BOM (Bill of Materials)
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    // JOML (Java OpenGL Math Library)
    implementation "org.joml:joml:${jomlVersion}"

    // LWJGL core and modules
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-stb"

    // LWJGL native runtime dependencies
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
}

test {
    useJUnitPlatform()
}

// Ensure correct LWJGL library path is set
application {
    mainClass = "org.vibhusha.test.Launcher"

    applicationDefaultJvmArgs = [
            "-Dorg.lwjgl.librarypath=${layout.buildDirectory.dir('libs').get().asFile.absolutePath}"
    ]
}

// Run task to execute the application
tasks.register("runApp", JavaExec) {
    group = "application"
    description = "Run the LWJGL application"
    mainClass = "org.vibhusha.test.Launcher"
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-Dorg.lwjgl.librarypath=${layout.buildDirectory.dir('libs').get().asFile.absolutePath}"]
}
